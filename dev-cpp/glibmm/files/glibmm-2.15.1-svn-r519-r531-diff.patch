Index: gio/src/fileinputstream.ccg
===================================================================
--- gio/src/fileinputstream.ccg	(revision 519)
+++ gio/src/fileinputstream.ccg	(revision 531)
@@ -81,25 +81,4 @@
                                        slot_copy);
 }
 
-#ifdef GLIBMM_EXCEPTIONS_ENABLED
-bool FileInputStream::seek(goffset offset, Glib::SeekType type)
-#else
-bool FileInputStream::seek(goffset offset, Glib::SeekType type, std::auto_ptr<Glib::Error>& error)
-#endif //GLIBMM_EXCEPTIONS_ENABLED
-{
-  GError* gerror = 0;
-  bool retvalue = g_file_input_stream_seek(gobj(), offset, ((GSeekType)(type)), NULL, &(gerror));
-#ifdef GLIBMM_EXCEPTIONS_ENABLED
-  if(gerror)
-    ::Glib::Error::throw_exception(gerror);
-#else
-  if(gerror)
-    error = ::Glib::Error::throw_exception(gerror);
-#endif //GLIBMM_EXCEPTIONS_ENABLED
-
-  return retvalue;
-
-}
-
-
 } // namespace Gio
Index: gio/src/fileinputstream.hg
===================================================================
--- gio/src/fileinputstream.hg	(revision 525)
+++ gio/src/fileinputstream.hg	(revision 531)
@@ -31,14 +31,11 @@
 namespace Gio
 {
 
-//TODO: This implements Seekable.
-
 /** FileInputStream provides input streams that take their content from a file.
  *
  * FileInputStream implements Seekable, which allows the input stream to jump to arbitrary positions in the file, 
- * provided the filesystem of the file allows it. In addition to the generic Seekable API, FileInputStream has its own API 
- * for seeking and positioning. To find the position of a file input stream, use tell(). To find out if a file input stream supports 
- * seeking, use can_seek(). To position a file input stream, use seek().
+ * provided the file system of the file allows it.
+ * Use the methods of the Seekable base class for seeking and positioning.
  *
  * @newin2p16
  */
@@ -84,24 +81,14 @@
                g_file_input_stream_query_info_finish,
                errthrow)
 
-  _WRAP_METHOD(goffset tell() const, g_file_input_stream_tell)
-  _WRAP_METHOD(bool can_seek() const, g_file_input_stream_can_seek)
-
-  _WRAP_METHOD(bool seek(goffset offset, Glib::SeekType type, const Glib::RefPtr<Cancellable>& cancellable),
-               g_file_input_stream_seek,
-               errthrow)
-
-  /** Seeks in the file input stream.
-   * 
-   * @param offset An offset to seek.
-   * @param type A SeekType.
-   * @result true if the stream was successfully seeked to the position. false on error. 
-   */
-  #ifdef GLIBMM_EXCEPTIONS_ENABLED
-  bool seek(goffset offset, Glib::SeekType type);
-  #else
-  bool seek(goffset offset, Glib::SeekType type, std::auto_ptr<Glib::Error>& error);
-  #endif //GLIBMM_EXCEPTIONS_ENABLED
+  //These seem to be just C convenience functions - they are already in the Seekable base class:
+  //See http://bugzilla.gnome.org/show_bug.cgi?id=509990
+  _IGNORE(g_file_input_stream_tell, g_file_input_stream_can_seek, g_file_input_stream_seek)
+//  _WRAP_METHOD(goffset tell() const, g_file_input_stream_tell)
+//  _WRAP_METHOD(bool can_seek() const, g_file_input_stream_can_seek)
+//  _WRAP_METHOD(bool seek(goffset offset, Glib::SeekType type, const Glib::RefPtr<Cancellable>& cancellable),
+//               g_file_input_stream_seek,
+//               errthrow)
 };
 
 } // namespace Gio
--- gio/src/fileoutputstream.hg	2008-01-26 13:30:20.000000000 -0800
+++ gio/src/fileoutputstream.hg	2008-01-26 13:31:59.000000000 -0800
@@ -69,20 +69,8 @@
                refreturn, errthrow)
 
   _WRAP_METHOD(std::string get_etag() const, g_file_output_stream_get_etag)
-  _WRAP_METHOD(goffset tell() const, g_file_output_stream_tell)
-  _WRAP_METHOD(bool can_seek() const, g_file_output_stream_can_seek)
-
-  _WRAP_METHOD(bool seek(goffset offset, Glib::SeekType type, const Glib::RefPtr<Cancellable>& cancellable),
-               g_file_output_stream_seek,
-               errthrow)
-  //TODO: cancellable can probably be NULL.
-
-  _WRAP_METHOD(bool can_truncate() const, g_file_output_stream_can_truncate)
-  _WRAP_METHOD(bool truncate(goffset size, const Glib::RefPtr<Cancellable>& cancellable),
-               g_file_output_stream_truncate,
-               errthrow)
-  //TODO: cancellable can probalby be NULL.
-
+  _IGNORE(g_file_output_stream_tell, g_file_output_stream_can_seek, g_file_output_stream_seek,
+  	  g_file_output_stream_can_truncate, g_file_output_stream_truncate)
 };
 
 } // namespace Gio
