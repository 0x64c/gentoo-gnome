From d293616f41ce5acc7a0f1d9e12907ba9edbf34b3 Mon Sep 17 00:00:00 2001
From: Bastien Nocera <hadess@hadess.net>
Date: Tue, 6 Sep 2011 20:11:54 +0100
Subject: [PATCH] mouse: Try harder to re-enable devices

Look for disabled devices when we need to re-enable
devices as they won't be listed in the list of devices
given by GdkDeviceManager (as per bug 658379)

https://bugzilla.gnome.org/show_bug.cgi?id=656397

[Alexandre Rostovtsev <tetromino@gmail.com>: backport to 3.1.90]
---
 plugins/mouse/gsd-mouse-manager.c |   69 +++++++++++++++++++++++++++++++++---
 1 files changed, 63 insertions(+), 6 deletions(-)

diff --git a/plugins/mouse/gsd-mouse-manager.c b/plugins/mouse/gsd-mouse-manager.c
index 843a57e..d48b27c 100644
--- a/plugins/mouse/gsd-mouse-manager.c
+++ b/plugins/mouse/gsd-mouse-manager.c
@@ -733,14 +733,15 @@ set_edge_scroll (GdkDevice               *device,
 }
 
 static void
-set_touchpad_enabled (GdkDevice *device,
-                      gboolean   state)
+set_touchpad_disabled (GdkDevice *device)
 {
         int id;
         XDevice *xdevice;
 
         g_object_get (G_OBJECT (device), "device-id", &id, NULL);
 
+        g_debug ("Trying to set device disabled for \"%s\" (%d)", gdk_device_get_name (device), id);
+
         xdevice = open_gdk_device (device);
         if (xdevice == NULL)
                 return;
@@ -750,8 +751,35 @@ set_touchpad_enabled (GdkDevice *device,
                 return;
         }
 
-        if (set_device_enabled (id, state) == FALSE)
-                g_warning ("Error %s device \"%s\"", (state) ? "enabling" : "disabling", gdk_device_get_name (device));
+        if (set_device_enabled (id, FALSE) == FALSE)
+                g_warning ("Error disabling device \"%s\" (%d)", gdk_device_get_name (device), id);
+        else
+                g_debug ("Disabled device \"%s\" (%d)", gdk_device_get_name (device), id);
+
+        XCloseDevice (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), xdevice);
+}
+
+static void
+set_touchpad_enabled (int id)
+{
+        XDevice *xdevice;
+
+        g_debug ("Trying to set device enabled for %d", id);
+
+        gdk_error_trap_push ();
+        xdevice = XOpenDevice (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), id);
+        if (gdk_error_trap_pop () != 0)
+                return;
+
+        if (!device_is_touchpad (xdevice)) {
+                XCloseDevice (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), xdevice);
+                return;
+        }
+
+        if (set_device_enabled (id, TRUE) == FALSE)
+                g_warning ("Error enabling device \"%d\"", id);
+        else
+                g_debug ("Enabled device %d", id);
 
         XCloseDevice (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), xdevice);
 }
@@ -867,7 +895,8 @@ set_mouse_settings (GsdMouseManager *manager,
         set_tap_to_click (device, g_settings_get_boolean (manager->priv->touchpad_settings, KEY_TAP_TO_CLICK), touchpad_left_handed);
         set_edge_scroll (device, g_settings_get_enum (manager->priv->touchpad_settings, KEY_SCROLL_METHOD));
         set_horiz_scroll (device, g_settings_get_boolean (manager->priv->touchpad_settings, KEY_PAD_HORIZ_SCROLL));
-        set_touchpad_enabled (device, g_settings_get_boolean (manager->priv->touchpad_settings, KEY_TOUCHPAD_ENABLED));
+        if (g_settings_get_boolean (manager->priv->touchpad_settings, KEY_TOUCHPAD_ENABLED) == FALSE)
+                set_touchpad_disabled (device);
 }
 
 static void
@@ -927,6 +956,8 @@ touchpad_callback (GSettings       *settings,
         for (l = devices; l != NULL; l = l->next) {
                 GdkDevice *device = l->data;
 
+                g_message ("checking on device %s", gdk_device_get_name (device));
+
                 if (device_is_blacklisted (manager, device))
                         return;
 
@@ -939,7 +970,10 @@ touchpad_callback (GSettings       *settings,
                 } else if (g_str_equal (key, KEY_PAD_HORIZ_SCROLL)) {
                         set_horiz_scroll (device, g_settings_get_boolean (settings, key));
                 } else if (g_str_equal (key, KEY_TOUCHPAD_ENABLED)) {
-                        set_touchpad_enabled (device, g_settings_get_boolean (settings, key));
+                        if (g_settings_get_boolean (settings, key) == FALSE)
+                                set_touchpad_disabled (device);
+                        else
+                                set_touchpad_enabled (gdk_x11_device_get_id (device));
                 } else if (g_str_equal (key, KEY_MOTION_ACCELERATION) ||
                            g_str_equal (key, KEY_MOTION_THRESHOLD)) {
                         set_motion (manager, device);
@@ -950,6 +984,18 @@ touchpad_callback (GSettings       *settings,
                 }
         }
         g_list_free (devices);
+
+        if (g_str_equal (key, KEY_TOUCHPAD_ENABLED) &&
+            g_settings_get_boolean (settings, key)) {
+                devices = get_disabled_devices (manager->priv->device_manager);
+                for (l = devices; l != NULL; l = l->next) {
+                        int device_id;
+
+                        device_id = GPOINTER_TO_INT (l->data);
+                        set_touchpad_enabled (device_id);
+                }
+                g_list_free (devices);
+        }
 }
 
 static void
@@ -1056,6 +1102,17 @@ gsd_mouse_manager_idle_cb (GsdMouseManager *manager)
         }
         g_list_free (devices);
 
+        if (g_settings_get_boolean (manager->priv->touchpad_settings, KEY_TOUCHPAD_ENABLED)) {
+                devices = get_disabled_devices (manager->priv->device_manager);
+                for (l = devices; l != NULL; l = l->next) {
+                        int device_id;
+
+                        device_id = GPOINTER_TO_INT (l->data);
+                        set_touchpad_enabled (device_id);
+                }
+                g_list_free (devices);
+        }
+
         gnome_settings_profile_end (NULL);
 
         manager->priv->start_idle_id = 0;
-- 
1.7.6.1

