From e7880e08bd2eb0b3ea59c8bdb049300712e38993 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek.chauhan@collabora.co.uk>
Date: Wed, 23 Jan 2013 02:29:10 +0530
Subject: [PATCH] Port audioscrobbler and daap plugins from gnome-keyring to
 libsecret

---
 configure.ac                                       | 41 +++++------
 plugins/audioscrobbler/Makefile.am                 |  3 +-
 .../rb-audioscrobbler-radio-source.c               | 46 ++++++------
 plugins/daap/Makefile.am                           |  6 +-
 plugins/daap/rb-daap-source.c                      | 82 ++++++++++------------
 5 files changed, 90 insertions(+), 88 deletions(-)

diff --git a/configure.ac b/configure.ac
index f739a19..6ff98d6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -223,26 +223,27 @@ fi
 AM_CONDITIONAL(USE_MTP, test x"$use_mtp" = xyes)
 
 
-dnl gnome-keyring support
-
-AC_ARG_WITH(gnome-keyring,
-            AC_HELP_STRING([--with-gnome-keyring],
-			   [Enable gnome-keyring support]),,
-	      with_gnome_keyring=auto)
-if test "x$with_gnome_keyring" != "xno"; then
-
-	PKG_CHECK_MODULES(GNOME_KEYRING, gnome-keyring-1, have_gnome_keyring=yes, have_gnome_keyring=no)
-	if test "x$have_gnome_keyring" = "xno" -a "x$with_gnome_keyring" = "xyes"; then
-	  AC_MSG_ERROR([gnome-keyring support explicitly requested but gnome-keyring couldn't be found])
+dnl libsecret keyring support
+
+AC_ARG_WITH(keyring,
+            AC_HELP_STRING([--with-keyring],
+			   [Enable keyring support using libsecret]),,
+	      with_keyring=auto)
+if test "x$with_keyring" != "xno"; then
+
+	PKG_CHECK_MODULES(LIBSECRET, libsecret-1, have_keyring=yes, have_keyring=no)
+	if test "x$have_keyring" = "xno" -a "x$with_keyring" = "xyes"; then
+	  AC_MSG_ERROR([keyring support explicitly requested but libsecret
+			could not be found])
 	fi
-	if test "x$have_gnome_keyring" = "xyes"; then
-	   AC_DEFINE(WITH_GNOME_KEYRING, 1, [Define if gnome-keyring support is enabled])
-	   use_gnome_keyring=yes
-	  AC_SUBST(GNOME_KEYRING_CFLAGS)
-	  AC_SUBST(GNOME_KEYRING_LIBS)
+	if test "x$have_keyring" = "xyes"; then
+	   AC_DEFINE(WITH_LIBSECRET, 1, [Define if keyring support is enabled])
+	   use_keyring=yes
+	  AC_SUBST(LIBSECRET_CFLAGS)
+	  AC_SUBST(LIBSECRET_LIBS)
 	fi
 fi
-AM_CONDITIONAL(USE_GNOME_KEYRING, test x"$use_gnome_keyring" = xyes)
+AM_CONDITIONAL(USE_LIBSECRET, test x"$use_keyring" = xyes)
 
 dnl Database
 AC_ARG_WITH(database,
@@ -919,10 +920,10 @@ if test x"$with_vala" = xyes; then
 else
 	AC_MSG_NOTICE([   Vala plugin support disabled])
 fi
-if test x"$use_gnome_keyring" = xyes; then
-	AC_MSG_NOTICE([** gnome-keyring support enabled])
+if test x"$use_keyring" = xyes; then
+	AC_MSG_NOTICE([** Libsecret keyring support enabled])
 else
-	AC_MSG_NOTICE([   gnome-keyring support disabled])
+	AC_MSG_NOTICE([   Libsecret keyring support disabled])
 fi
 if test "x$enable_fm_radio" != xno; then
 	AC_MSG_NOTICE([** FM radio support enabled])
diff --git a/plugins/audioscrobbler/Makefile.am b/plugins/audioscrobbler/Makefile.am
index 913a6b3..c139a34 100644
--- a/plugins/audioscrobbler/Makefile.am
+++ b/plugins/audioscrobbler/Makefile.am
@@ -31,6 +31,7 @@ libaudioscrobbler_la_LIBADD = 				\
 	$(top_builddir)/shell/librhythmbox-core.la	\
 	$(TOTEM_PLPARSER_LIBS)				\
 	$(JSON_GLIB_LIBS)				\
+	$(LIBSECRET_LIBS)				\
 	$(RHYTHMBOX_LIBS)
 
 INCLUDES = 						\
@@ -53,7 +54,7 @@ INCLUDES = 						\
 	$(TOTEM_PLPARSER_CFLAGS)			\
 	$(JSON_GLIB_CFLAGS)				\
 	$(RHYTHMBOX_CFLAGS)				\
-	$(GNOME_KEYRING_CFLAGS)				\
+	$(LIBSECRET_CFLAGS)				\
 	-D_BSD_SOURCE
 
 gtkbuilderdir = $(plugindatadir)
diff --git a/plugins/audioscrobbler/rb-audioscrobbler-radio-source.c b/plugins/audioscrobbler/rb-audioscrobbler-radio-source.c
index 6f5f3cf..9735537 100644
--- a/plugins/audioscrobbler/rb-audioscrobbler-radio-source.c
+++ b/plugins/audioscrobbler/rb-audioscrobbler-radio-source.c
@@ -35,8 +35,8 @@
 #include <glib/gi18n.h>
 #include <glib/gstdio.h>
 
-#ifdef WITH_GNOME_KEYRING
-#include <gnome-keyring.h>
+#ifdef WITH_LIBSECRET
+#include <libsecret/secret.h>
 #endif
 
 #include <totem-pl-parser.h>
@@ -1054,28 +1054,33 @@ old_api_shake_hands (RBAudioscrobblerRadioSource *source)
 		g_free (password_hash);
 		g_free (msg_url);
 	} else {
-#ifdef WITH_GNOME_KEYRING
-		GnomeKeyringResult result;
+#ifdef WITH_LIBSECRET
 		char *password;
+		GError *error = NULL;
 
 		rb_debug ("attempting to retrieve password from keyring");
-		result = gnome_keyring_find_password_sync (GNOME_KEYRING_NETWORK_PASSWORD,
-		                                           &password,
-		                                           "user", source->priv->username,
-		                                           "server", rb_audioscrobbler_service_get_name (source->priv->service),
-		                                           NULL);
+		password = secret_password_lookup_sync (SECRET_SCHEMA_COMPAT_NETWORK,
+							NULL, &error,
+							"user", source->priv->username,
+							"server", rb_audioscrobbler_service_get_name (source->priv->service),
+							NULL);
 
-		if (result == GNOME_KEYRING_RESULT_OK) {
+		if (password) {
 			source->priv->old_api_password = g_strdup (password);
 			rb_debug ("password found. shaking hands");
 			old_api_shake_hands (source);
 		} else {
-			rb_debug ("no password found");
+			if (error) {
+				rb_debug ("unable to lookup password: %s", error->message);
+				g_error_free (error);
+			} else {
+				rb_debug ("no password found");
+			}
 #endif
 			rb_debug ("cannot shake hands. asking user for password");
 			display_password_info_bar (source);
 			source->priv->is_busy = FALSE;
-#ifdef WITH_GNOME_KEYRING
+#ifdef WITH_LIBSECRET
 		}
 #endif
 	}
@@ -1277,7 +1282,7 @@ password_info_bar_response_cb (GtkInfoBar *info_bar,
 	g_free (source->priv->old_api_password);
 	source->priv->old_api_password = g_strdup (gtk_entry_get_text (GTK_ENTRY (source->priv->password_info_bar_entry)));
 
-#ifdef WITH_GNOME_KEYRING
+#ifdef WITH_LIBSECRET
 	/* save the new password */
 	char *password_desc;
 
@@ -1285,13 +1290,14 @@ password_info_bar_response_cb (GtkInfoBar *info_bar,
 	                                 rb_audioscrobbler_service_get_name (source->priv->service));
 
 	rb_debug ("saving password to keyring");
-	gnome_keyring_store_password_sync (GNOME_KEYRING_NETWORK_PASSWORD,
-	                                   GNOME_KEYRING_DEFAULT,
-	                                   password_desc,
-	                                   source->priv->old_api_password,
-	                                   "user", source->priv->username,
-	                                   "server", rb_audioscrobbler_service_get_name (source->priv->service),
-	                                   NULL);
+	secret_password_store_sync (SECRET_SCHEMA_COMPAT_NETWORK,
+	                            NULL,
+	                            password_desc,
+	                            source->priv->old_api_password,
+				    NULL, NULL,
+	                            "user", source->priv->username,
+	                            "server", rb_audioscrobbler_service_get_name (source->priv->service),
+	                            NULL);
 
 	g_free (password_desc);
 #endif
diff --git a/plugins/daap/Makefile.am b/plugins/daap/Makefile.am
index b950bef..f4bb907 100644
--- a/plugins/daap/Makefile.am
+++ b/plugins/daap/Makefile.am
@@ -63,9 +63,9 @@ INCLUDES = 						\
 	$(RHYTHMBOX_CFLAGS)				\
 	-D_BSD_SOURCE
 
-if USE_GNOME_KEYRING
-libdaap_la_LIBADD += $(GNOME_KEYRING_LIBS)
-INCLUDES += $(GNOME_KEYRING_CFLAGS)
+if USE_LIBSECRET
+libdaap_la_LIBADD += $(LIBSECRET_LIBS)
+INCLUDES += $(LIBSECRET_CFLAGS)
 endif
 
 gtkbuilderdir = $(plugindatadir)
diff --git a/plugins/daap/rb-daap-source.c b/plugins/daap/rb-daap-source.c
index fb034f9..75e0dc4 100644
--- a/plugins/daap/rb-daap-source.c
+++ b/plugins/daap/rb-daap-source.c
@@ -35,8 +35,8 @@
 #include <glib/gi18n.h>
 #include <gtk/gtk.h>
 
-#ifdef WITH_GNOME_KEYRING
-#include <gnome-keyring.h>
+#ifdef WITH_LIBSECRET
+#include <libsecret/secret.h>
 #endif
 
 #include "rhythmdb.h"
@@ -394,31 +394,36 @@ mount_op_reply_cb (GMountOperation *op,
 		   AuthData *auth_data)
 {
 	const char *password;
-	gchar *keyring;
-#ifdef WITH_GNOME_KEYRING
-	guint32 item_id;
+#ifdef WITH_LIBSECRET
+	gchar *label;
+	gchar *collection = NULL;
 #endif
 
 	rb_debug ("mount op reply: %d", result);
 	password = g_mount_operation_get_password (op);
 
-#ifdef WITH_GNOME_KEYRING
+#ifdef WITH_LIBSECRET
 	switch (g_mount_operation_get_password_save (op)) {
 	case G_PASSWORD_SAVE_NEVER:
 		break;
 
 	case G_PASSWORD_SAVE_FOR_SESSION:
-		keyring = "session";
+		collection = SECRET_COLLECTION_SESSION;
 		/* fall through */
 
 	case G_PASSWORD_SAVE_PERMANENTLY:
-		gnome_keyring_set_network_password_sync (keyring,
-			NULL,
-			"DAAP", auth_data->name,
-			NULL, "daap",
-			NULL, 0,
+		label = g_strdup_printf ("Rhythmbox DAAP password for %s", auth_data->name);
+		secret_password_store_sync (SECRET_SCHEMA_COMPAT_NETWORK,
+			collection,
+			label,
 			password,
-			&item_id);
+			NULL,
+			NULL,
+			"domain", "DAAP",
+			"server", auth_data->name,
+			"protocol", "daap",
+			NULL);
+		g_free (label);
 		break;
 
 	default:
@@ -443,7 +448,11 @@ mount_op_reply_cb (GMountOperation *op,
 }
 
 static void
-ask_password (RBDAAPSource *source, const char *name, const char *keyring, SoupSession *session, SoupMessage *msg, SoupAuth *auth)
+ask_password (RBDAAPSource *source,
+	      const char *name,
+	      SoupSession *session,
+	      SoupMessage *msg,
+	      SoupAuth *auth)
 {
 	GtkWindow *parent;
 	GMountOperation *mount_op;
@@ -465,10 +474,8 @@ ask_password (RBDAAPSource *source, const char *name, const char *keyring, SoupS
 	g_signal_connect (mount_op, "reply", G_CALLBACK (mount_op_reply_cb), auth_data);
 
 	flags = G_ASK_PASSWORD_NEED_PASSWORD;
-#ifdef WITH_GNOME_KEYRING
-	if (gnome_keyring_is_available ()) {
-		flags |= G_ASK_PASSWORD_SAVING_SUPPORTED;
-	}
+#ifdef WITH_LIBSECRET
+	flags |= G_ASK_PASSWORD_SAVING_SUPPORTED;
 #endif
 	message = g_strdup_printf (_("The music share '%s' requires a password to connect"), name);
 	g_signal_emit_by_name (mount_op, "ask-password", message, NULL, "DAAP", flags);
@@ -485,44 +492,31 @@ connection_auth_cb (DMAPConnection *connection,
 		    RBDAAPSource   *source)
 {
 	gchar *password = NULL;
-#ifdef WITH_GNOME_KEYRING
-	GnomeKeyringResult keyringret;
-	gchar *keyring;
-	GList *list = NULL;
+#ifdef WITH_LIBSECRET
+	GError *error = NULL;
 
-	keyring = NULL;
 	if (!source->priv->tried_password) {
-		gnome_keyring_get_default_keyring_sync (&keyring);
-		keyringret = gnome_keyring_find_network_password_sync (
-				NULL,
-				"DAAP", name,
-				NULL, "daap",
-				NULL, 0, &list);
-	} else {
-		keyringret = GNOME_KEYRING_RESULT_CANCELLED;
+		password = secret_password_lookup_sync (SECRET_SCHEMA_COMPAT_NETWORK,
+				NULL, &error,
+				"domain", "DAAP",
+				"server", name,
+				"protocol", "daap",
+				NULL);
 	}
 
-	if (keyringret == GNOME_KEYRING_RESULT_OK) {
-		GnomeKeyringNetworkPasswordData *pwd_data;
-
-		if (list != NULL) {
-			pwd_data = (GnomeKeyringNetworkPasswordData*)list->data;
-			password = g_strdup (pwd_data->password);
-		}
+	if (!error)
 		source->priv->tried_password = TRUE;
-	}
+	else
+		g_error_free (error);
 
 	if (password == NULL) {
-		ask_password (source, name, keyring, session, msg, auth);
+		ask_password (source, name, session, msg, auth);
 	} else {
 		dmap_connection_authenticate_message (connection, session, msg, auth, password);
 	}
 
-	if (list)
-		gnome_keyring_network_password_list_free (list);
-	g_free (keyring);
 #else
-	ask_password (source, name, NULL, session, msg, auth);
+	ask_password (source, name, session, msg, auth);
 #endif
 }
 
-- 
1.7.12.4

