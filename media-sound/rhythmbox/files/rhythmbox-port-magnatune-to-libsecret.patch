From 937423f0cff334693a68bf9c9d13e3d477c7a969 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek.chauhan@collabora.co.uk>
Date: Sat, 2 Mar 2013 14:09:26 +0530
Subject: [PATCH 2/2] magnatune: Port to libsecret

---
diff --git a/plugins/magnatune/MagnatuneAccount.py b/plugins/magnatune/MagnatuneAccount.py
index f8cf81b..6fdc406 100644
--- a/plugins/magnatune/MagnatuneAccount.py
+++ b/plugins/magnatune/MagnatuneAccount.py
@@ -1,4 +1,5 @@
 # -*- Mode: python; coding: utf-8; tab-width: 8; indent-tabs-mode: t; -*-
+# vim: set sts=0 ts=8 sw=8 tw=0 noet :
 #
 # Copyright (C) 2012 Jonathan Matthew  <jonathan@d14n.org>
 #
@@ -24,10 +25,17 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA.
 
-from gi.repository import Gio, GnomeKeyring
+from gi.repository import Gio, Secret, SecretUnstable
 
 __instance = None
 
+# We need to be able to fetch passwords stored by libgnome-keyring, so we use
+# a schema with SECRET_SCHEMA_DONT_MATCH_NAME set.
+# See: http://developer.gnome.org/libsecret/unstable/migrating-schemas.html
+MAGNATUNE_SCHEMA = Secret.Schema.new("org.gnome.rhythmbox.plugins.magnatune",
+					Secret.SchemaFlags.DONT_MATCH_NAME,
+					{"rhythmbox-plugin": Secret.SchemaAttributeType.STRING})
+
 def instance():
 	global __instance
 	if __instance is None:
@@ -36,54 +44,44 @@ def instance():
 
 class MagnatuneAccount(object):
 	def __init__(self):
-		self.keyring_item = None
 		self.settings = Gio.Settings("org.gnome.rhythmbox.plugins.magnatune")
-
-		self.keyring_attributes = GnomeKeyring.attribute_list_new()
-		GnomeKeyring.attribute_list_append_string(self.keyring_attributes,
-							  "rhythmbox-plugin",
-							  "magnatune")
-		(result, items) = GnomeKeyring.find_items_sync(GnomeKeyring.ItemType.GENERIC_SECRET,
-							       self.keyring_attributes)
-		if result == GnomeKeyring.Result.OK and len(items) != 0:
-			(result, item) = GnomeKeyring.item_get_info_sync(None, items[0].item_id)
-			if result == GnomeKeyring.Result.OK:
-				self.keyring_item = item
-			else:
-				print "Couldn't get keyring item: " + GnomeKeyring.result_to_message(result)
-		else:
-			print "couldn't search keyring items: " + GnomeKeyring.result_to_message(result)
+		self.secret = None
+		self.keyring_attributes = {"rhythmbox-plugin": "magnatune"}
+                # Haha.
+                self.secret_service = SecretUnstable.Service.get_sync(SecretUnstable.ServiceFlags.OPEN_SESSION, None)
+		items = self.secret_service.search_sync(MAGNATUNE_SCHEMA,
+							self.keyring_attributes,
+							SecretUnstable.SearchFlags.LOAD_SECRETS,
+							None)
+		if not items:
+			# The Python API doesn't seem to have a way to differentiate between errors and no results.
+			print ("Couldn't find an existing keyring entry")
+			return
+		self.secret = items[0].get_secret().get()
 
 	def get(self):
-		if self.keyring_item is None:
+		if self.secret is None:
 			return ('none', None, None)
 
 		account_type = self.settings['account-type']
 		try:
-			(username, password) = self.keyring_item.get_secret().split("\n")
+			(username, password) = self.secret.split("\n")
 			return (account_type, username, password)
 		except ValueError:
 			return ('none', None, None)
 
 	def update(self, username, password):
 		secret = '\n'.join((username, password))
-		if self.keyring_item is not None:
-			if secret == self.keyring_item.get_secret():
-				print "account details not changed"
-				return
+		if secret == self.secret:
+			print "Account details not changed"
+			return
 
-		(result, id) = GnomeKeyring.item_create_sync(None,
-							     GnomeKeyring.ItemType.GENERIC_SECRET,
-							     "Rhythmbox: Magnatune account information",
-							     self.keyring_attributes,
-							     secret,
-							     True)
-		if result == GnomeKeyring.Result.OK:
-			if self.keyring_item is None:
-				(result, item) = GnomeKeyring.item_get_info_sync(None, id)
-				if result == GnomeKeyring.Result.OK:
-					self.keyring_item = item
-				else:
-					print "couldn't fetch keyring itme: " + GnomeKeyring.result_to_message(result)
+		result = Secret.password_store_sync(MAGNATUNE_SCHEMA,
+							self.keyring_attributes,
+							Secret.COLLECTION_DEFAULT,
+							"Rhythmbox: Magnatune account information",
+							secret, None)
+		if not result:
+			print "Couldn't create keyring item!"
 		else:
-			print "couldn't create keyring item: " + GnomeKeyring.result_to_message(result)
+			self.secret = secret
-- 
1.7.12.4

