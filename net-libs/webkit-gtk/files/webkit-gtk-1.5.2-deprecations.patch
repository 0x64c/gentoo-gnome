2011-08-17  Alejandro G. Castro  <alex@igalia.com>

        [GTK] Fix compilation problems with deprecations in gtk+
        https://bugs.webkit.org/show_bug.cgi?id=66073

        Reviewed by Martin Robinson.

        * platform/gtk/GtkAuthenticationDialog.cpp:
        (WebCore::GtkAuthenticationDialog::GtkAuthenticationDialog): Added
        gtk_box_new conditional compilation for gtk+-3.
        * platform/gtk/RenderThemeGtk3.cpp:
        (WebCore::RenderThemeGtk::adjustRepaintRect):
        (WebCore::RenderThemeGtk::paintSliderTrack):
        (WebCore::RenderThemeGtk::paintSliderThumb):
        (WebCore::RenderThemeGtk::adjustSliderThumbSize): Now we have have
        GTK_TYPE_SCALE in gtk+3.

2011-08-17  Alejandro G. Castro  <alex@igalia.com>

        [GTK] Fix compilation problems with deprecations in gtk+
        https://bugs.webkit.org/show_bug.cgi?id=66073

        Reviewed by Martin Robinson.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (main): G_CONST_RETURN was deprecated
        * GtkLauncher/main.c:
        (createWindow): Added gtk_box_new conditional compilation for
        gtk+-3.
        * MiniBrowser/gtk/BrowserWindow.c:
        (browser_window_init): Replaced gtk_vbox_new with gtk_box_new, we
        are just supporting gtk+-3 for WebKit2.

2011-08-17  Alejandro G. Castro  <alex@igalia.com>

        [GTK] Fix compilation problems with deprecations in gtk+
        https://bugs.webkit.org/show_bug.cgi?id=66073

        Reviewed by Martin Robinson.

        * WebCoreSupport/FullscreenVideoController.cpp:
        (FullscreenVideoController::createHud): Added gtk_box_new
        conditional compilation for gtk+-3.

Index: /trunk/Source/WebKit/gtk/WebCoreSupport/FullscreenVideoController.cpp
===================================================================
--- /trunk/Source/WebKit/gtk/WebCoreSupport/FullscreenVideoController.cpp	(revision 89044)
+++ /trunk/Source/WebKit/gtk/WebCoreSupport/FullscreenVideoController.cpp	(revision 93338)
@@ -532,5 +532,9 @@
     g_signal_connect(m_hudWindow, "motion-notify-event", G_CALLBACK(onFullscreenGtkMotionNotifyEvent), this);
 
+#ifdef GTK_API_VERSION_2
     GtkWidget* hbox = gtk_hbox_new(FALSE, 4);
+#else
+    GtkWidget* hbox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 4);
+#endif
     gtk_container_add(GTK_CONTAINER(m_hudWindow), hbox);
 
@@ -547,5 +551,9 @@
 
     GtkAdjustment* adjustment = GTK_ADJUSTMENT(gtk_adjustment_new(0.0, 0.0, 100.0, 0.1, 1.0, 1.0));
+#ifdef GTK_API_VERSION_2
     m_timeHScale = gtk_hscale_new(adjustment);
+#else
+    m_timeHScale = gtk_scale_new(GTK_ORIENTATION_HORIZONTAL, adjustment);
+#endif
     gtk_scale_set_draw_value(GTK_SCALE(m_timeHScale), FALSE);
     gtk_range_set_show_fill_level(GTK_RANGE(m_timeHScale), TRUE);
Index: /trunk/Source/WebCore/platform/gtk/RenderThemeGtk3.cpp
===================================================================
--- /trunk/Source/WebCore/platform/gtk/RenderThemeGtk3.cpp	(revision 88405)
+++ /trunk/Source/WebCore/platform/gtk/RenderThemeGtk3.cpp	(revision 93338)
@@ -150,5 +150,5 @@
     case SliderVerticalPart:
     case SliderHorizontalPart:
-        context = getStyleContext(part == SliderThumbHorizontalPart ?  GTK_TYPE_HSCALE : GTK_TYPE_VSCALE);
+        context = getStyleContext(GTK_TYPE_SCALE);
         break;
     case ButtonPart:
@@ -599,5 +599,5 @@
     ASSERT(part == SliderHorizontalPart || part == SliderVerticalPart || part == MediaVolumeSliderPart);
 
-    GtkStyleContext* context = getStyleContext(part == SliderThumbHorizontalPart ? GTK_TYPE_HSCALE : GTK_TYPE_VSCALE);
+    GtkStyleContext* context = getStyleContext(GTK_TYPE_SCALE);
     gtk_style_context_save(context);
 
@@ -634,5 +634,5 @@
     ASSERT(part == SliderThumbHorizontalPart || part == SliderThumbVerticalPart || part == MediaVolumeSliderThumbPart);
 
-    GtkStyleContext* context = getStyleContext(part == SliderThumbHorizontalPart ? GTK_TYPE_HSCALE : GTK_TYPE_VSCALE);
+    GtkStyleContext* context = getStyleContext(GTK_TYPE_SCALE);
     gtk_style_context_save(context);
 
@@ -675,5 +675,5 @@
 
     gint sliderWidth, sliderLength;
-    gtk_style_context_get_style(getStyleContext(part == SliderThumbHorizontalPart ? GTK_TYPE_HSCALE : GTK_TYPE_VSCALE),
+    gtk_style_context_get_style(getStyleContext(GTK_TYPE_SCALE),
                                 "slider-width", &sliderWidth,
                                 "slider-length", &sliderLength,
Index: /trunk/Source/WebCore/platform/gtk/GtkAuthenticationDialog.cpp
===================================================================
--- /trunk/Source/WebCore/platform/gtk/GtkAuthenticationDialog.cpp	(revision 88800)
+++ /trunk/Source/WebCore/platform/gtk/GtkAuthenticationDialog.cpp	(revision 93338)
@@ -88,5 +88,9 @@
 
     // Build contents.
+#ifdef GTK_API_VERSION_2
     GtkWidget* hBox = gtk_hbox_new(FALSE, 12);
+#else
+    GtkWidget* hBox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 12);
+#endif
     gtk_container_set_border_width(GTK_CONTAINER(hBox), 5);
     gtk_box_pack_start(GTK_BOX(gtk_dialog_get_content_area(dialog)), hBox, TRUE, TRUE, 0);
@@ -96,5 +100,9 @@
     gtk_box_pack_start(GTK_BOX(hBox), icon, FALSE, FALSE, 0);
 
+#ifdef GTK_API_VERSION_2
     GtkWidget* mainVBox = gtk_vbox_new(FALSE, 18);
+#else
+    GtkWidget* mainVBox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 18);
+#endif
     gtk_box_pack_start(GTK_BOX(hBox), mainVBox, TRUE, TRUE, 0);
 
@@ -106,5 +114,9 @@
     gtk_box_pack_start(GTK_BOX(mainVBox), GTK_WIDGET(descriptionLabel), FALSE, FALSE, 0);
 
+#ifdef GTK_API_VERSION_2
     GtkWidget* vBox = gtk_vbox_new(FALSE, 6);
+#else
+    GtkWidget* vBox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 6);
+#endif
     gtk_box_pack_start(GTK_BOX(mainVBox), vBox, FALSE, FALSE, 0);
 
@@ -140,5 +152,9 @@
 
     if (sessionCanSavePasswords(m_session)) {
+#ifdef GTK_API_VERSION_2
         GtkWidget* rememberBox = gtk_vbox_new(FALSE, 6);
+#else
+        GtkWidget* rememberBox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 6);
+#endif
         gtk_box_pack_start(GTK_BOX(vBox), rememberBox, FALSE, FALSE, 0);
 
Index: /trunk/Tools/DumpRenderTree/gtk/DumpRenderTree.cpp
===================================================================
--- /trunk/Tools/DumpRenderTree/gtk/DumpRenderTree.cpp	(revision 91707)
+++ /trunk/Tools/DumpRenderTree/gtk/DumpRenderTree.cpp	(revision 93338)
@@ -65,5 +65,5 @@
 extern "C" {
 // This API is not yet public.
-extern G_CONST_RETURN gchar* webkit_web_history_item_get_target(WebKitWebHistoryItem*);
+extern const gchar* webkit_web_history_item_get_target(WebKitWebHistoryItem*);
 extern gboolean webkit_web_history_item_is_target_item(WebKitWebHistoryItem*);
 extern GList* webkit_web_history_item_get_children(WebKitWebHistoryItem*);
@@ -1168,5 +1168,10 @@
 
     window = gtk_window_new(GTK_WINDOW_POPUP);
+#ifdef GTK_API_VERSION_2
     container = gtk_hbox_new(TRUE, 0);
+#else
+    container = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 0);
+    gtk_box_set_homogeneous(GTK_BOX(container), TRUE);
+#endif
     gtk_container_add(GTK_CONTAINER(window), container);
     gtk_widget_show_all(window);
Index: /trunk/Tools/MiniBrowser/gtk/BrowserWindow.c
===================================================================
--- /trunk/Tools/MiniBrowser/gtk/BrowserWindow.c	(revision 90551)
+++ /trunk/Tools/MiniBrowser/gtk/BrowserWindow.c	(revision 93338)
@@ -160,5 +160,5 @@
     gtk_widget_show(GTK_WIDGET(item));
 
-    GtkWidget *vbox = gtk_vbox_new(FALSE, 0);
+    GtkWidget *vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 0);
     window->mainBox = vbox;
     gtk_box_pack_start(GTK_BOX(vbox), toolbar, FALSE, FALSE, 0);
Index: /trunk/Tools/GtkLauncher/main.c
===================================================================
--- /trunk/Tools/GtkLauncher/main.c	(revision 89438)
+++ /trunk/Tools/GtkLauncher/main.c	(revision 93338)
@@ -214,5 +214,9 @@
     uriEntry = gtk_entry_new();
 
+#ifdef GTK_API_VERSION_2
     vbox = gtk_vbox_new(FALSE, 0);
+#else
+    vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 0);
+#endif
     statusbar = createStatusbar(webView);
     gtk_box_pack_start(GTK_BOX(vbox), createToolbar(uriEntry, webView), FALSE, FALSE, 0);
