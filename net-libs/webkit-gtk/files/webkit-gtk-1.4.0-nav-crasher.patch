commit e037ca43e772ac0e5b0d80f95a2a6c996c0c11fb
Author: xan@webkit.org <xan@webkit.org@268f45cc-cd09-0410-ab3c-d52691b4dbfc>
Date:   Sat Apr 30 05:20:07 2011 +0000

    2011-04-29  Xan Lopez  <xlopez@igalia.com>
    
            Reviewed by Martin Robinson.
    
            [Gtk+] Crash when navigating back
            https://bugs.webkit.org/show_bug.cgi?id=59799
    
            The innerNode management in WebKitHitTestResult was relying on the
            old DOM bindings behavior where every DOM objects had to be
            disposed by the caller. Now the objects are garbage collected by
            WebKit when either the parent frame or document dies, so this is
            not needed anymore. Update the code to simply take ownership of
            the node, which effectively correctly balances the reference
            count.
    
            * webkit/webkithittestresult.cpp:
            (webkit_hit_test_result_dispose): call C++ dtors in private data.
            (webkit_hit_test_result_get_property): adatp to GRefPtr API.
            (webkit_hit_test_result_init): call C++ ctors in private data.
    
    git-svn-id: http://svn.webkit.org/repository/webkit/trunk@85390 268f45cc-cd09-0410-ab3c-d52691b4dbfc

diff --git a/Source/WebKit/gtk/webkit/webkithittestresult.cpp b/Source/WebKit/gtk/webkit/webkithittestresult.cpp
index 9632493..1abb166 100644
--- a/Source/WebKit/gtk/webkit/webkithittestresult.cpp
+++ b/Source/WebKit/gtk/webkit/webkithittestresult.cpp
@@ -22,6 +22,7 @@
 #include "webkithittestresult.h"
 
 #include "GOwnPtr.h"
+#include "GRefPtr.h"
 #include "HitTestResult.h"
 #include "KURL.h"
 #include "WebKitDOMBinding.h"
@@ -47,7 +48,7 @@ struct _WebKitHitTestResultPrivate {
     char* linkURI;
     char* imageURI;
     char* mediaURI;
-    WebKitDOMNode* innerNode;
+    GRefPtr<WebKitDOMNode> innerNode;
 };
 
 enum {
@@ -74,7 +75,7 @@ static void webkit_hit_test_result_finalize(GObject* object)
 
 static void webkit_hit_test_result_dispose(GObject* object)
 {
-    g_object_unref(WEBKIT_HIT_TEST_RESULT(object)->priv->innerNode);
+    WEBKIT_HIT_TEST_RESULT(object)->priv->~WebKitHitTestResultPrivate();
 
     G_OBJECT_CLASS(webkit_hit_test_result_parent_class)->dispose(object);
 }
@@ -98,7 +99,7 @@ static void webkit_hit_test_result_get_property(GObject* object, guint propertyI
         g_value_set_string(value, priv->mediaURI);
         break;
     case PROP_INNER_NODE:
-        g_value_set_object(value, priv->innerNode);
+        g_value_set_object(value, priv->innerNode.get());
         break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propertyID, pspec);
@@ -230,6 +231,7 @@ static void webkit_hit_test_result_class_init(WebKitHitTestResultClass* webHitTe
 static void webkit_hit_test_result_init(WebKitHitTestResult* web_hit_test_result)
 {
     web_hit_test_result->priv = G_TYPE_INSTANCE_GET_PRIVATE(web_hit_test_result, WEBKIT_TYPE_HIT_TEST_RESULT, WebKitHitTestResultPrivate);
+    new (web_hit_test_result->priv) WebKitHitTestResultPrivate();
 }
 
 namespace WebKit {
